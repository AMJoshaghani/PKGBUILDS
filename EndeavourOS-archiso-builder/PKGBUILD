#!/bin/bash

# Maintainer: EndeavourOS-Team <info@endeavouros.com>

pkgname=EndeavourOS-archiso
pkgver=0.9.1
pkgrel=1
pkgdesc="Build EndeavourOS-archiso"
arch=(any)
makedepends=(archiso mkinitcpio-archiso git squashfs-tools)
source=(git+https://github.com/endeavouros-team/EndeavourOS-archiso.git)
sha512sums=('SKIP')


_check_repo_in_pacman_conf() {
    local reponame="endeavouros_calamares"
    local conf=/etc/pacman.conf

    if [ -z "$(grep "^\[$reponame\]$" $conf)" ] ; then
        echo "Sorry, repo [$reponame] is not found in $conf." >&2
        read -p "Add it now and update system (Y/n)? " >&2
        case "$REPLY" in
            [yY]* | "")
                local conftmp="$(mktemp -u "$HOME"/pacman.conf.tmp.XXXX)"
                cp $conf $conftmp
                cat <<EOF >> $conftmp

[$reponame]
Server = https://github.com/endeavouros-team/mirrors/releases/download/\$repo
EOF
                sudo cp $conftmp $conf || { rm -f $conftmp ; return 1 ; }
                rm -f $conftmp
                ;;
            *)
                return 1
                ;;
        esac
    fi
}

_create_cleanup_script() {
    # There may be lots of files to delete:
    local installer_files=(
        cleaner_script.sh chrooted_cleaner_script.sh calamares_switcher update-mirrorlist
        pacstrap_calamares calamares_for_testers rank_pacman_key.sh
    )
    local file=run_before_squashfs.sh
    if [ -r $file ] ; then
        installer_files=($(grep "^mv " $file | grep "/usr/bin/$" | sed -e 's|^mv ||' -e 's| /usr/bin/$||'))
    fi
    installer_files+=(update-mirrorlist)

    cat <<EOF > "$cleanup"
#!/bin/bash
sudo rm -f  $build_rootdir/${pkgname}-*.pkg.tar.*
sudo rm -rf $build_rootdir/${pkgname}
sudo rm -rf $build_rootdir/pkg
sudo rm -rf $build_rootdir/src

# pushd /usr/bin
# sudo rm -fv "${installer_files[@]}"
# popd
           
sync
rm -f \$(basename $cleanup)         # underlying folder no more exists...
EOF
    chmod +x "$cleanup"
}

_select_calamares_type() {
    local timeout=60
    while true ; do
        read -t $timeout -p "[${timeout}sec] Build with calamares 'test' or 'current'? [current] " >&2
        case "$REPLY" in
            "" | current)
                sed -i packages.x86_64 \
                    -e 's|^#[ ]*calamares_current[ ]*$|calamares_current|' \
                    -e 's|^[ ]*calamares_test[ ]*$|#calamares_test|'
                break
                ;;
            test)
                sed -i packages.x86_64 \
                    -e 's|^[ ]*calamares_current[ ]*$|#calamares_current|' \
                    -e 's|^#[ ]*calamares_test[ ]*$|calamares_test|'
                break
                ;;
        esac
    done
}

build() {
    ###################################################
    # Check that we have calamares repo properly set up.
    ###################################################

    _check_repo_in_pacman_conf

    ###################################################
    # Create a cleanup script.
    ###################################################

    local build_rootdir="$srcdir/.."
    local cleanup="$build_rootdir/cleanup.bash"
    local basedir=$srcdir/$pkgname

    _create_cleanup_script

    ###################################################
    # Build.
    ###################################################

    cd $basedir

    _select_calamares_type   # current or test

    sudo pacman -Syyu || return 1
    
    sudo ./fix_permissions.sh
    sudo ./build.sh -v |& tee $HOME/iso-build-log.txt
    cd ../..
    sudo mv $srcdir/$pkgname/out/*.iso .
    sudo chown $LOGNAME *.iso

    sync

    ###################################################
    # Show the result.
    ###################################################

    cd "$build_rootdir"

    echo ""
    echo "#######################################################################"
    echo ""
    echo "The new ISO is here:"
    ls -1 "$build_rootdir"/*.iso
    echo ""
    echo "To clean up all except the ISO, run command:"
    echo "    bash $cleanup"
    echo ""
    echo "#######################################################################"
    echo ""
}

package() {

    cd $srcdir/..

    local isofile=$(ls -1 endeavouros-*-x86_64.iso | grep -v devel | tail -n1)   # $isofile = endeavouros-<date>-x86_64.iso
    local isobase=$(basename $isofile .iso)                                      # $isobase = endeavouros-<date>-x86_64
    local date=$(echo $isofile | sed 's|endeavouros-\([0-9][0-9.]*\)-.*|\1|')    # date from the ISO file name

    echo "Create the sha512sum file:"
    sha512sum $isofile > $isofile.sha512sum

    echo "Create the signature file:"
    gpg --default-key info@endeavouros.com \
        --detach-sign \
        --output $isofile.sig \
        $isofile

    if [ "$HOME" = "/home/joekamprad" ] ; then

        echo "Create the torrent file:"
        mktorrent -p -v \
                  --announce=udp://tracker.openbittorrent.com:80 \
                  -a udp://tracker.torrent.eu.org:451/announce \
                  -a udp://thetracker.org:80/announce \
                  -a udp://tracker.dutchtracking.com:6969/announce \
                  -a udp://tracker.opentrackr.org:1337/announce \
                  -c $isobase.tar \
                  -n $isobase.tar \
                  -o $isobase.tar.torrent \
                  -w https://mirror.alpix.eu/endeavouros/iso/$isofile \
                  $HOME/Documents/$isobase.tar
    fi

    echo Done.
}
