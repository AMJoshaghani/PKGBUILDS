#!/bin/bash

UpdateDatabase() { pkexec pacman -Fy >/dev/null ; }

CheckDatabaseUpdate() {

    if ! /usr/bin/pacman -Fl eos-bash-shared >&/dev/null ; then
        # need to run pacman -Fy

        local txt=""
        local cmd

        txt+="\nPacman database needs updating using command:\n"
        txt+="<tt>  pacman -Fy</tt>\n"
        cmd=(
            eos_yad --form --title="Database update needed" --text="$txt" --image=dialog-information
            --button=yad-quit:$exit_quit
            --button="Update database now!system-run!":$exit_updatedb
        )
        "${cmd[@]}"
        case "$?" in
            $exit_updatedb)   UpdateDatabase ;;
            $exit_quit | *)   exit ;;
        esac
    fi
}

RenameApp() {
    # modifies 'app2' and may modify 'app'

    case "$app" in
        #su-c_wrapper)     app2="$app" ; app="su-c__wrapper" ;;   # handle underscore character for yad !!
        yad)              app2=yad-eos ;;
        *)                app2="$app" ;;
    esac
}

EosApps2cmd() {
    local -r apps=(
        akm ChangeDisplayResolution checkupdatesext curl-exit-code-to-string eos-apps-info eos-connection-checker eos-downgrade eos-download-wallpapers
        eos-log-tool eos-pacdiff eos-packagelist eos-quickstart eos-rankmirrors eos-sendlog eos-shifttime eos-update-notifier eos-update-notifier-configure
        eos-wallpaper-set eos-welcome grub-colour-chooser mirrorlist-rank-info nvidia-driver-supported-branches nvidia-inst paccache-service-manager
        pahis reflector-simple RunInTerminal show-location-info su-c_wrapper UpdateInTerminal
    )
    local app app2

    for app in "${apps[@]}" ; do
        RenameApp                                                               # Rename some apps.
        cmd+=(--field="$app!!$app2":fbtn "eos-apps-info-helper '$app2'")        # Add app buttons to the command.
    done
}

BonusApps2cmd() {
    local -r blabel="Bonus items"
    local -r bonus_apps=(downgrade grub inxi linux linux-lts nvidia paru rate-mirrors virtualbox worm yad yay)    # local -r bonus_apps=($(eos-apps-info-helper --show-bonus))
    local app app2

    cmd+=(--field="<b><i>$blabel:</i></b>":LBL "")                              # visually separates bonus apps

    for app in "${bonus_apps[@]}" ; do
        RenameApp
        cmd+=(--field="$app!!$app2":fbtn "eos-apps-info-helper '$app2'")
    done
}

Main()
{
    source /usr/share/endeavouros/scripts/eos-script-lib-yad || return 1

    # yad command exit codes (don't use even numbers)
    local -r exit_quit=11
    local -r exit_updatedb=13
    local -r update_label="Update database"

    CheckDatabaseUpdate

    local txt=""
    txt+="The buttons below will show information about the apps in the EndeavourOS repository.\n"
    txt+="Click an app button and an information window opens.\n\n"
    txt+="Note: you may need to click the <b>$update_label</b> button below to update your package database.\n\n"
    txt+="A special selection of <i>bonus items</i> is appended!\n"

    local cmd=(
        eos_yad --form --title="EndeavourOS apps info" --text="$txt"
        --columns=3 --align-buttons --image=dialog-information
        --button="$update_label!!Updates package database and restarts this app":$exit_updatedb
        --buttons-layout=center
    )

    EosApps2cmd
    BonusApps2cmd

    while true ; do
        "${cmd[@]}"
        case "$?" in
            $exit_updatedb) UpdateDatabase ;;
            *) break ;;
        esac
    done
}

Main "$@"
