# Original Maintainer: Portergos Linux <portergoslinux@gmail.com>
# Maintainers : EndeavourOS <info@endeavouros.com>, joekamprad <joekamprad@endeavouros.com>
# Multipurpose installer for arch based distros

pkgname=calamares_current
_eos_changes=Calamares_current
_reponame=calamares
pkgver=3.2.41.1
pkgrel=8
pkgdesc="calamares installer for arch based distros"
arch=('any')
url="https://github.com/endeavouros-team"
license=('GPL3')
optdepends=('update-mirrorlist' 'mkinitcpio-openswap' 'calamares_config_next')
makedepends=('git' 'cmake' 'boost-libs' 'extra-cmake-modules' 'kpmcore')
conflicts=('calamares_offline' 'calamares_netinstall_test' 'calamares_netinstall' 'calamares_current' 'calamares_test') 
depends=( 'qt5-svg' 'qt5-webengine' 'yaml-cpp' 'networkmanager' 'upower' 'kcoreaddons' 'kconfig' 'ki18n' 'kservice' 'kwidgetsaddons' 'kpmcore' 'squashfs-tools' 'rsync' 'cryptsetup' 'qt5-xmlpatterns' 'doxygen' 'dmidecode' 'gptfdisk' 'hwinfo' 'kparts' 'polkit-qt5' 'python' 'qt5ct' 'solid' 'qt5-tools')
provides=("${pkgname}")
options=(!strip !emptydirs)
# When stable merge to master branch and use "git+https://github.com/endeavouros-team/$_eos_changes.git#branch=master"
source=(
  "git+https://github.com/endeavouros-team/$_eos_changes.git#branch=master"
  "https://github.com/calamares/calamares/releases/download/v$pkgver/$_reponame-$pkgver.tar.gz"
)
sha256sums=(
'SKIP'
'SKIP'
)

prepare() {

    mv $_reponame-$pkgver            $_reponame
    rsync -va $_eos_changes/*        $_reponame
    rm -rf $_eos_changes

    mkdir -p $_reponame/build/$pkgname

    # remove some calamares modules we don't need
    # rm -r $_reponame/src/modules/{dracut,dracutlukscfg,dummycpp,dummyprocess,dummypython,dummypythonqt,initramfs,plymouthcfg,tracking,webview,welcomeq,finishedq,keyboardq,license,localeq,notesqml,oemid,plasmalnf,usersq,services-openrc,openrcdmcryptcfg} ||true
    # remove default branding // keep package small
    rm -r $_reponame/src/branding/default

    # change some files on the go - distro-specific
    sed -i "s?configuration files\" OFF?configuration files\" ON?g"             $_reponame/CMakeLists.txt
    sed -i 's/\"mkinitcpio\", \"-p\", m_kernel/\"mkinitcpio\", \"-P\"/'         $_reponame/src/modules/initcpio/InitcpioJob.cpp


    
    # recheck if InitcpioJob.cpp, locale, luksbootkeyfile, grub are still needed

    # sed -i "s?pacman_flags = \"-S\"?pacman_flags = \"-Sy\"?" $_reponame/src/modules/packages/main.py
    sed -i "s?pacman_flags,?pacman_flags, \"--needed\",?" $_reponame/src/modules/packages/main.py

}



build() {

    cd $_reponame/build
    # -DBoost_NO_BOOST_CMAKE=ON
    # bug https://github.com/calamares/calamares/issues/1257
    cmake .. -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_LIBDIR=/usr/lib -DBoost_NO_BOOST_CMAKE=ON -DCMAKE_INSTALL_PREFIX=/usr -DINSTALL_CONFIG=OFF -DSKIP_MODULES="contextualprocess dracut dracutlukscfg dummycpp dummyprocess dummypython dummypythonqt initramfs plymouthcfg tracking webview welcomeq finishedq keyboardq license localeq notesqml oemid plasmalnf usersq services-openrc openrcdmcryptcfg packagechooser"
    export DESTDIR="$srcdir/$_reponame/build/$pkgname" && make -j4 install

}

package() {
    local destdir="/usr"

    # Build proccess can't understand our personal files, so we explicitly copy them here to be packed along calamares files

    # pacstrap as bash script implementation 
    # maybe download base_install.sh everytime from calamares module so it can be updated on the go...
    cp -r $_reponame/src/modules/pacstrap/base_install.sh             $_reponame/build/$pkgname/usr/lib/calamares/modules/pacstrap/base_install.sh
    chmod +x $_reponame/build/$pkgname/usr/lib/calamares/modules/pacstrap/base_install.sh
    cp -r $_reponame/src/modules/user_pkglist/pkglist_install.sh             $_reponame/build/$pkgname/usr/lib/calamares/modules/user_pkglist/pkglist_install.sh
    chmod +x $_reponame/build/$pkgname/usr/lib/calamares/modules/user_pkglist/pkglist_install.sh
    # fix for networkcfg module
    cp $_reponame/src/modules/main.py $_reponame/build/$pkgname/usr/lib/calamares/modules/networkcfg/main.py
    rm $_reponame/src/modules/main.py
    # Commom install -D doesn't work
    cp -r "${srcdir}/${_reponame}/build/$pkgname/"*                   "${pkgdir}${destdir}"

}
