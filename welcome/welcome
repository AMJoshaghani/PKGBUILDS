#!/bin/bash
#
# EndeavourOS greeter.
#
# Shows crucial info about the EndeavourOS and its usage.
# Targeted for people new to EndeavourOS (but not new to Linux).
#
# Usage: EndeavourOS-greeter [-f]
# where
#    -f     Forces starting the greeter even if it is disabled in the config.
#
# The config is in file $HOME/.config/EOS-Greeter.conf.
#

EXCLAMATION='&#33;'   # '!'
AND='&#38;'           # '&'


yad_calamares() {
    local progs=(
        # order is significant here!
        /usr/bin/calamares_switcher
        /usr/bin/calamares
    )
    local prog

    for prog in "${progs[@]}" ; do
        if [ -x $prog ] ; then
            "$prog" &
            return
        fi
    done
    yad --text="calamares: not installed!" --title="Warning" --height=100 --width=200 --button=yad-quit:0
}
export -f yad_calamares

INSTALL() {
  local handle="$1"
  local tabnum="$2"
  yad --plug="$handle" --tabnum="$tabnum" \
      --form \
      --columns=1 \
      --image=gtk-save \
      --text="<b>Installing EndeavourOS to disk</b>" --text-align=left \
      --field="START THE INSTALLER!!Start the EndeavourOS installer":fbtn    'bash -c yad_calamares' \
      --field="Installation tips!!Installation tips":fbtn                    "$_BROWSER https://endeavouros.com/docs/installation" \
      --field="Troubleshoot!!System Rescue":fbtn                             "$_BROWSER https://endeavouros.com/docs/system-rescue" \
      --field="Partition manager!!Gparted allows examining and managing disk partitions":fbtn    'gparted' \
      &> /dev/null &    
}

GeneralInfo() {
  local handle="$1"
  local tabnum="$2"
  yad --plug="$handle" --tabnum="$tabnum" \
      --form \
      --columns=3 \
      --image=dialog-question \
      --text="<b>Find your way at the EndeavourOS website!</b>" --text-align=left \
      --field="Web site!!https://endeavouros.com":fbtn          "$_BROWSER https://endeavouros.com" \
      --field="Download!!Where to download from and how to verify.":fbtn                    "$_BROWSER https://endeavouros.com/download" \
      --field="Wiki!!Featured articles":fbtn                                  "$_BROWSER https://endeavouros.com/wiki" \
      --field="News!!News and articles":fbtn                                  "$_BROWSER https://endeavouros.com/posts" \
      --field="Forum!!Ask, comment, and chat in our friendly forum!":fbtn     "$_BROWSER https://forum.endeavouros.com" \
      &> /dev/null &
}

AfterInstall() {
  local handle="$1"
  local tabnum="$2"
  yad --plug="$handle" --tabnum="$tabnum" \
      --form \
      --columns=2 \
      --image=dialog-information \
      --text="<b>After install tasks</b>" --text-align=left \
      --field="Package management!!Manage packages with 'pacman'":fbtn   "$_BROWSER https://endeavouros.com/docs/pacman" \
      --field="AUR $AND yay$EXCLAMATION!!Arch User Repository info":fbtn "$_BROWSER https://endeavouros.com/docs/aur/yay" \
      --field="Hardware and Network!!Get your hardware working":fbtn     "$_BROWSER https://endeavouros.com/docs/hardware-and-network" \
      --field="NVIDIA users$EXCLAMATION!!Use NVIDIA installer":fbtn      "$_BROWSER https://endeavouros.com/docs/hardware-and-network/nvidia-installer" \
      --field="Forum tips!!Help us help you!":fbtn                       "$_BROWSER https://endeavouros.com/docs/forum/how-to-include-systemlogs-in-your-post" \
      &> /dev/null &
}

GetInvolved() {         # disabled until the web site has more support
  local handle="$1"
  local tabnum="$2"
  yad --plug="$handle" --tabnum="$tabnum" \
      --form \
      --columns=2 \
      --image=face-cool \
      --text="<b>Get involved!</b>" --text-align=left \
      --field="Who we are!!Who we are":fbtn                      "$_BROWSER https://endeavouros.com/info" \
      --field="Bug reports!!Report bugs":fbtn                    "$_BROWSER https://forum.endeavouros.com/c/Arch-based-related-questions/bug-reports" \
      &> /dev/null &    
}

GreeterSettings() {  # not needed anymore; kept as a reference only of how to call bash functions
  local handle="$1"
  local tabnum="$2"
  yad --plug="$handle" --tabnum="$tabnum" \
      --form \
      --columns=1 \
      --image=system-settings \
      --text="<b>Greeter configuration</b>\nConfig file: $GREETER_CONFIG" --text-align=left \
      --field="Do not show the greeter anymore!!Start again with $0":fbtn    'bash -c "RunGreeterSettings disabled"' \
      --field="Keep showing the greeter!!I like it\!":fbtn                   'bash -c "RunGreeterSettings enabled"' \
      &> /dev/null &    
}


# Fields explanation:
# --field="ButtonName!IconName!Tooltip":fbtn "Command"

### These variables are required:

_NOTEBOOK_TITLE="EndeavourOS Greeter"        # main window title
_NOTEBOOK_TABS=(                             # names of functions above
    INSTALL
    GeneralInfo
    AfterInstall
    #GetInvolved
)

####################### DO NOT CHANGE ANYTHING AFTER THIS LINE! ######################################################

DIE() { echo "Error: $1." >&2 ; exit 1 ; }

SetBrowser() {
    local xx
    for xx in xdg-open exo-open firefox chromium ; do  # use one of these browser commands
        if [ -x /usr/bin/$xx ] ; then
            _BROWSER=/usr/bin/$xx        # for showing external links
            return
        fi
    done
    DIE "$FUNCNAME: cannot find a browser"
}

RunGreeterSettings() {
    case "$1" in
        enabled)
            echo "Greeter=enabled"  > "$GREETER_CONFIG"
            ;;
        disabled)
            echo "Greeter=disabled" > "$GREETER_CONFIG"
            echo "To run the greeter again, start a terminal and run $PROGRAM_NAME with option '$FORCE_START'." | \
                yad --text-info --image=dialog-information --text="Re-enabling the greeter:" \
                    --title="How to re-enable greeter" \
                    --geometry=500x200 --wrap \
                    --fontname="Monospace Regular 12" \
                    --button=" I remember!face-angel!I promise":0 >& /dev/null
            ;;
        check)
            test -r "$GREETER_CONFIG" || { echo enabled ; return ; }              # enabled if config does not exist
            grep "^Greeter=" "$GREETER_CONFIG" 2>/dev/null | cut -d '=' -f 2
            ;;
        *)
            DIE "Error: $FUNCNAME: internal error! Please report at https://forum.endeavouros.com."
            ;;
    esac
}

# exports for use in the yad command:
export -f RunGreeterSettings
export PROGRAM_NAME="$0"
export GREETER_CONFIG="$HOME/.config/EOS-Greeter.conf"

export FORCE_START="-f"   # option to start greeter even if it is disabled by config


PrepareTabs() {
    local handle="$1"
    local xx ix
    ix=1
    for xx in "${_NOTEBOOK_TABS[@]}" ; do
        $xx "$handle" "$((ix++))"
    done
}

SeparateWordsWithSpaces() { # add a space before a capital letter inside a word
    local tabname="$1"

    if [ "$(echo "$tabname" | tr -d '[a-z]')" = "$tabname" ] ; then
        echo "$tabname"           # all capital letters ==> don't change
    else
        echo "$tabname" | sed -e 's|\([A-Z]\)| \1|g' -e 's|^ ||'  # add space before capital letters
    fi
}

StartHere() {

    if [ "$1" != "$FORCE_START" ] ; then
        test "$(RunGreeterSettings check)" != "enabled" && {
            echo "$PROGRAM_NAME is disabled. To start it anyway, use option $FORCE_START"
            return
        }
    fi

    SetBrowser

    local handle="$(shuf -i 800000-999999 -n 1)"
    local tab tabname
    local notebook   # contains the main yad command

    PrepareTabs "$handle" || DIE "PrepareTabs failed"

    # Create the yad command gradually into an array 'notebook':

    notebook=(yad --notebook --key="$handle" --center --title="$_NOTEBOOK_TITLE")
    for tab in "${_NOTEBOOK_TABS[@]}" ; do
        tabname="$(SeparateWordsWithSpaces "$tab")"
        notebook+=(--tab="$tabname")
    done
    notebook+=(--button=" See you later!face-cool!Greeter is enabled in config":0)
    notebook+=(--button=" Don't show me anymore!face-crying!Disabled the greeter":1)

    "${notebook[@]}"

    case "$?" in
        0) RunGreeterSettings enabled ;;
        1) RunGreeterSettings disabled ;;
    esac
}

StartHere "$@"
