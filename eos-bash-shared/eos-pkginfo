#!/bin/bash

DIE() {
    echo "$PROGNAME: error: $1" >&2
    Usage
    exit 1
}

Helper() {
    for HELPER in paru yay ; do
        if [ -x /usr/bin/$HELPER ] ; then
            return
        fi
    done
    DIE "AUR helper not found!"
}

FindUrl() {
    PKGINFO="$(LANG=C $HELPER -Si "$PKGNAME" 2>/dev/null)"
    [ -n "$PKGINFO" ] || DIE "package '$PKGNAME' not found"
}

OpenUrl() {
    local url="$(echo "$PKGINFO" | /usr/bin/grep ^URL | /usr/bin/head -n1 | /usr/bin/awk '{print $NF}')"
    case "$url" in
        http*)
            echo "$url ..." >&2
            case "$url" in
                https://*) ;;
                http://*)  read -p "Change http to https (Y/n)? " >&2
                           case "$REPLY" in
                               ""|[yY]*) url="${url/http:/https:}" ;;
                           esac
                           ;;
            esac
            ;;
        "") DIE "URL for package '$PKGNAME' not found" ;;
        *)  DIE "unsupported URL '$url'" ;;
    esac
    /usr/bin/xdg-open "$url" 2>/dev/null
}

Options() {
    PROGNAME="$(/usr/bin/basename "$0")"
    PKGNAME=""

    local arg

    for arg in "$@" ; do
        case "$arg" in
            -*) DIE "option $arg is not supported." ;;
            *)  PKGNAME="$arg" ;;
        esac
    done

    [ -n "$PKGNAME" ] || DIE "give package-name"
}

Usage() {
    cat <<EOF
Usage: $PROGNAME <package-name>
  package-name     A package name from upstream or AUR.
EOF
}

Main()
{
    local PKGNAME
    local PROGNAME
    local HELPER
    local PKGINFO

    Options "$@"
    Helper
    FindUrl
    OpenUrl
}

Main "$@"
