#!/bin/bash

DIE() {
    echo "$PROGNAME: error: $1" >&2
    Usage
    exit 1
}

Helper() {
    for HELPER in paru yay ; do
        if [ -x /usr/bin/$HELPER ] ; then
            return
        fi
    done
    DIE "AUR helper not found!"
}

FindUrl() {
    PKGINFO="$(LANG=C $HELPER -Qi "$PKGNAME" 2>/dev/null)"
    if [ -z "$PKGINFO" ] ; then
        PKGINFO="$(LANG=C $HELPER -Si "$PKGNAME" 2>/dev/null)"
    fi
    [ -n "$PKGINFO" ] || DIE "package '$PKGNAME' not found"
}

OpenUrl() {
    local url="$(echo "$PKGINFO" | /usr/bin/grep ^URL | /usr/bin/head -n1 | /usr/bin/awk '{print $NF}')"
    case "$url" in
        http*)
            echo "$url ..." >&2
            case "$url" in
                https://*) ;;
                http://*)  read -p "Change http to https (Y/n)? " >&2
                           case "$REPLY" in
                               ""|[yY]*) url="${url/http:/https:}" ;;
                           esac
                           ;;
            esac
            ;;
        "") DIE "URL for package '$PKGNAME' not found" ;;
        *)  DIE "unsupported URL '$url'" ;;
    esac
    $BROWSER "$url" >& /dev/null
}

Options() {
    PKGNAME=""

    local arg

    for arg in "$@" ; do
        case "$arg" in
            --browser=*) BROWSER="${arg#*=}" ;;
            -*) DIE "option $arg is not supported." ;;
            *)  PKGNAME="$arg" ;;
        esac
    done

    [ -n "$PKGNAME" ] || DIE "give package-name"

    # If $PKGNAME is not a package, then assume it is a file of an installed package and find the package name.

    if (! /usr/bin/$HELPER -Q "$PKGNAME" >& /dev/null) ; then
        if (! /usr/bin/$HELPER -Si "$PKGNAME" >& /dev/null) ; then
            local item fail=no
            case "${PKGNAME::1}" in
                "/") item="$PKGNAME" ;;            # file name
                *)   item="/usr/bin/$PKGNAME" ;;   # program name
            esac
            if [ -r "$item" ] ; then
                PKGNAME="$(LANG=C /usr/bin/$HELPER -Qo "$item" 2>/dev/null | awk '{print $(NF-1)}')"
                [ -n "$PKGNAME" ] && return
            fi
            DIE "given name '$PKGNAME' does not refer to a package or an installed file."
        fi
    fi
}

Usage() {
    cat <<EOF
Usage: $PROGNAME <name>
  <name>   A package name, program name, or a file path included in a package.
           Given program name or file path must exist in the current system.
           The package can be from EndeavourOS, Arch, or AUR.
EOF
}

Main()
{
    local PROGNAME="$(/usr/bin/basename "$0")"
    local PKGNAME
    local HELPER
    local PKGINFO
    local BROWSER=/usr/bin/xdg-open

    Helper
    Options "$@"
    FindUrl
    OpenUrl
}

Main "$@"
