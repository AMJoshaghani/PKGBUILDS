#!/bin/bash

# Usage: eos-wallpaper-set [filename]
# where
#    filename      Picture file name (optional).
#
# Without filename, assumes all wallpapers are at /usr/share/endeavouros/backgrounds.

#################################################################################
EOS_SCRIPTS_YAD=/usr/share/endeavouros/scripts/eos-script-lib-yad
source $EOS_SCRIPTS_YAD || {
    echo "ERROR: cannot read $EOS_SCRIPTS_YAD" >&2
    exit 1
}
unset EOS_SCRIPTS_YAD

export -f eos_yad
export -f eos_yad_terminal
export -f eos_yad_check_internet_connection
export -f eos_yad_GetArgVal
export -f eos_yad_RunCmdTermBash
export -f eos_yad_problem
export -f eos_yad_DIE
export -f eos_yad_WARN
export -f eos_yad__detectDE
export -f eos_yad_GetDesktopName
export -f eos_GetArch
#################################################################################

eos_yad_infomsg() {
    local msg="$1"
    echo "$msg" >&2
    eos_yad --form --text="$msg" --title="Message" --tail --wrap --image=info \
            --button=yad-quit:0 "$@"
}

DIE() {
    echo "$1" >&2
    if [ 0 -eq 1 ] ; then
        echo "$1" | \
            eos_yad --text-info --title="Error" --image=error --button=yad-ok:0 \
                    --width=500 --height=300
    else
        eos_yad --form --text="$1\n" --title="Error" --image=error --button=yad-ok:0
    fi
    exit 1
}

WallpaperSelect() {
    local pic_count=$(/usr/bin/ls -l "$picfolder" | /usr/bin/wc -l)
    local height=$((pic_count * 36))
    local hmax=600 hmin=300

    if [ $height -gt $hmax ] ; then
        height=$hmax
    elif [ $height -lt $hmin ] ; then
        height=$hmin
    fi

    pic="$(eos_yad --file --filename="$picfolder" --width=700 --height=$height --title="Choose wallpaper file")"
    test $? -eq 0 || exit 1
}

XfceSetWallpaper() {
    # Set all "last-image" values in file $conf to picture $pic

    local impl

    case "$(eos_GetArch)" in
        armv7h) impl=1 ;;
        *)      impl=2 ;;       # 2 = best for x86_64 (?)
    esac

    case "$impl" in
        0)
            local conf="$HOME/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-desktop.xml"
            test -r "$conf" || DIE "Config file '$conf' does not exist."
            sed -i "$conf" -e 's|name="last-image".*$|name="last-image" type="string" value="'"$pic"'"/>|'
            eos_yad_infomsg "Reboot is required for the changes to take effect."
            ;;
        1)
            local prop
            for prop in $(xfconf-query --channel xfce4-desktop --list | grep /last-image$) ; do
                xfconf-query --channel xfce4-desktop --property $prop --set "$pic"
            done
            #eos_yad_infomsg "Reboot is required for the changes to take effect."
            ;;
        2)
            local monitors=($(xrandr | grep -w connected | awk '{print $1}'))
            local monitor mon prop

            for monitor in "${monitors[@]}" ; do
                mon=monitor${monitor}
                prop=$(xfconf-query --channel xfce4-desktop --list | grep  /last-image$  | grep $mon)
                xfconf-query --channel xfce4-desktop --property $prop --set "$pic"
            done
            ;;
    esac
}

WallpaperSetCommon() {
    # Assume:
    #    - $pic is the picture file name
    #    - $DE is the desktop environment

    test -n "$pic" || DIE "no picture!"
    test -n "$DE"  || DIE "no DE!"

    case "$DE" in
        BUDGIE)
            AssertPicture endeavouros_budgie.png
            gsettings set org.gnome.desktop.background picture-uri "$pic"
            ;;
        CINNAMON)
            AssertPicture endeavouros_cinnamon.png
            gsettings set org.cinnamon.desktop.background picture-uri "$pic"
            ;;
        DEEPIN)
            AssertPicture endeavouros_deepin.png
            dconf write /com/deepin/wrap/gnome/desktop/background/picture-uri "'$pic'"  # Note: extra quotes required!
            ;;
        GNOME | GNOME3)
            AssertPicture endeavouros_gnome.png
            gsettings set org.gnome.desktop.background picture-uri "$pic"
            ;;
        I3)
            AssertPicture endeavouros_i3.png no
            feh --bg-scale "$pic"
            ;;
        KDE)
            AssertPicture endeavouros_plasma.png no
            python3 /usr/share/endeavouros/scripts/ksetwallpaper.py "$pic"
            # see also:
            # https://www.kubuntuforums.net/showthread.php/66762-Right-click-wallpaper-changer?p=387392&viewfull=1#post387392
            ;;
        LXQT)
            AssertPicture endeavouros_lxqt.png no
            pcmanfm-qt --set-wallpaper="$pic"
            ;;
        MATE)
            AssertPicture endeavouros_mate.png no
            gsettings set org.mate.background picture-filename "$pic"
            ;;
        XFCE)
            AssertPicture endeavouros_xfce4.png no
            XfceSetWallpaper
            ;;
        *)
            DIE "Sorry, desktop '$DE' is not supported."
            ;;
    esac
}

PictureNameVariations() {
    # Allow very small naming choices in the default wallpapers,
    # like '-' instead of '_' before the DE name.

    [ -r "$pic" ] && return    # picture found, OK
    
    if [ "$(basename "$pic")" = "$fallback" ] ; then
        local changed="$(echo "$pic" | sed 's|endeavouros_\([a-z][a-z]*[0-9]\.png\)$|endeavouros-\1|')"
        if [ -r "$changed" ] ; then
            echo "Info: wallpaper name changed from '$(basename "$pic")' to '$(basename "$changed")'" >&2
            pic="$changed"
            return 0
        fi
    fi
    DIE "Picture file '$pic' does not exist."
}

AssertPicture() {
    local fallback="$1"
    local use_file_prefix="$2"

    case "$pic" in
        DEFAULT | default)
            case "$(eos_GetArch)" in
                armv7h)
                    pic="$picfolder/arm-$fallback"
                    [ -r "$pic" ] || pic="$picfolder/$fallback"          # ARM pictures missing
                    ;;
                *)
                    pic="$picfolder/$fallback"
                    ;;
            esac
            ;;
        ISO | iso)
            pic="$picfolder/endeavouros-default-background.png"          # new picture
            [ -r "$pic" ] || pic="$picfolder/endeavouros-wallpaper.png"  # old picture
            ;;
    esac

    # change $pic to full path format
    case "$pic" in
        "")
            DIE "no picture file given!"
            ;;
        file://*)
            pic="${pic:7}"
            ;;
        /*)
            ;;                                        # OK, full path
        *)
            if [ -r "$picfolder/$pic" ] ; then
                pic="$picfolder/$pic"                 # EOS picture without path given, add path
            elif [ -r "$pic" ] ; then
                pic="$PWD/$pic"                       # picture has relative path
            fi
            ;;
    esac

    # Now we have a full path. Check that it exists or die.
    PictureNameVariations

    # Some DE's prefer file:// prefix, some not.
    if [ "$use_file_prefix" = "no" ] ; then
        case "$pic" in
            file://*) pic="${pic:7}" ;;
        esac
    else
        case "$pic" in
            file://*) ;;
            *) pic="file://$pic" ;;
        esac
    fi
    echo "Setting desktop wallpaper $(basename "$pic") for '$DE' ..." >&2
}

Parameters() {
    local arg msg

    for arg in "$@" ; do
        case "$arg" in
            -*)
                msg="$(printf "\n%s\n\n" "Unsupported option '$arg'." ; Usage)"
                DIE "$msg"
                ;;
            *)
                pic="$arg"
                ;;
        esac
    done
}

Usage() {
    cat <<EOF
Usage: <b>$progname</b> [wallpaper-file]
where
    wallpaper-file     Wallpaper file name, or DEFAULT

'wallpaper-file' value
    - can have absolute or relative path, with or without leading 'file://'.
    - 'DEFAULT' means the default Desktop specific wallpaper.
    - 'ISO'     means the default wallpaper for the installer ISO
If 'wallpaper-file' is not given, user can choose a wallpaper from EndeavourOS default wallpapers.

EOF
}

Main()
{
    local progname="$(basename "$0")"
    local DE="$(eos_yad_GetDesktopName)"
    local picfolder=/usr/share/endeavouros/backgrounds
    local pic=""

    Parameters "$@"

    if [ -z "$pic" ] ; then
        WallpaperSelect
    fi
    WallpaperSetCommon
}

Main "$@"
