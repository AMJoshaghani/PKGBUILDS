# Maintainers: Portergos Linux <portergoslinux@gmail.com>, EndeavourOS info@endeavouros.com
# Multipurpose installer for arch based distros

pkgname=calamares_fun
_eos_changes=Calamares_current
_reponame=calamares
pkgver=3.2.30
pkgrel=3
pkgdesc="calamares installer for arch based distros"
arch=('any')
url="https://github.com/endeavouros-team"
license=('GPL3')
optdepends=('update-mirrorlist')
makedepends=('git' 'cmake' 'boost-libs' 'extra-cmake-modules' 'kpmcore')
conflicts=('calamares_offline' 'calamares_netinstall_test' 'calamares_netinstall' 'calamares_current' 'calamares_test') 
depends=( 'qt5-svg' 'qt5-webengine' 'yaml-cpp' 'networkmanager'
'boost' 'upower' 'kcoreaddons' 'kconfig' 'ki18n' 'kservice' 'kwidgetsaddons' 'kpmcore' 'squashfs-tools' 'rsync' 'cryptsetup' 'qt5-xmlpatterns' 'doxygen' 'dmidecode' 'gptfdisk' 'hwinfo' 'kparts' 'polkit-qt5' 'python' 'qt5ct' 'solid' 'qt5-tools')
provides=("${pkgname}")
options=(!strip !emptydirs)
# When stable merge to master branch and use "git+https://github.com/endeavouros-team/$_eos_changes.git#branch=master"
source=(
  "git+https://github.com/endeavouros-team/$_eos_changes.git#branch=updating_august_20_2020"
  "git+https://github.com/endeavouros-team/calamares_branding.git#branch=master"
  "https://github.com/calamares/calamares/releases/download/v$pkgver/$_reponame-$pkgver.tar.gz"
)
sha256sums=(
'SKIP'
'SKIP'
'SKIP'
)

prepare() {

    mv $_reponame-$pkgver            $_reponame
    rsync -va $_eos_changes/*        $_reponame
    rm -rf $_eos_changes

    # New branding stuff from @FLVAL
    rsync -va calamares_branding/*   $_reponame/src
    rm -rf calamares_branding
       
    # Build proccess can't understand our personal files, so we adjust here

    # Create settings.conf here

    sed -i 's?branding:.*?branding: endeavouros?' $_reponame/settings.conf
    sed -i 's?#  - luksbootkeyfile?  - luksbootkeyfile?' $_reponame/settings.conf
    sed -i 's?#  - luksopenswaphookcfg?  - luksopenswaphookcfg?' $_reponame/settings.conf
    sed -i 's?#  - grubcfg?  - grubcfg?' $_reponame/settings.conf

    sed -i "s?  - networkcfg?  - networkcfg\n  - packages?" $_reponame/settings.conf
    # disable
    sed -i "s?- initramfs?#- initramfs?" $_reponame/settings.conf

    # scripts instead of shellprocess
    sed -i "s?  - umount?  - scripts\n  - umount?" $_reponame/settings.conf
    # Install prompt
    sed -i "s?prompt-install:.*?prompt-install: true?" $_reponame/settings.conf

    # create settings for offline and online
    cp $_reponame/settings.conf $_reponame/settings.conf_online
    cp $_reponame/settings.conf $_reponame/settings.conf_offline

    # offline
    sed -i "s?  - unpackfs?  - unpackfs\n  - get_root_username\n  - copy_kernel?" $_reponame/settings.conf_offline

    #sed -i "s?  - users?  - removeuser\n  - users?" $_reponame/settings.conf_offline
    # 2 user instances at settings.conf, bypass the wrong one
    sed -i "N;N;s?  - users\n  - displaymanager?  - removeuser\n  - users\n  - displaymanager?" $_reponame/settings.conf_offline

    # online
    sed -i "s?  - unpackfs?  - pacstrap\n  - get_root_username?" $_reponame/settings.conf_online

    # Create packages.conf
    echo -e "---\nbackend: pacman\nskip_if_no_internet: false\nupdate_db: false\nupdate_system: false\nupdate_system: false" > $_reponame/src/modules/packages/packages.conf_online 
    echo -e "---\nbackend: pacman\nskip_if_no_internet: true\nupdate_db: false\nupdate_system: false\nupdate_system: false" > $_reponame/src/modules/packages/packages.conf_offline

    # offline is default
    cp $_reponame/src/modules/packages/packages.conf_offline                    $_reponame/src/modules/packages/packages.conf
    cp $_reponame/settings.conf_offline  $_reponame/settings.conf

    # welcome module
    # Observation: timezone urls fail sometimes
    # https://geoip.kde.org/v1/ubiquity # xml
    # https://geoip.kde.org/v1/calamares # locale.conf
    # https://ipapi.co/json # json
    # https://freegeoip.app/xml/ # xml, slow
    # welcome.conf # country / countrycode
    # locale.conf # TimeZone

    sed -i "s?showDonateUrl:.*??" $_reponame/src/modules/welcome/welcome.conf
    # "none" causes calamares to hang forever at "checking modules requirements"
    sed -i "s?style:    \"none\"?style:    \"xml\"?" $_reponame/src/modules/welcome/welcome.conf

    cp $_reponame/src/modules/welcome/welcome.conf $_reponame/src/modules/welcome/welcome.conf_online
    cp $_reponame/src/modules/welcome/welcome.conf $_reponame/src/modules/welcome/welcome.conf_offline

    sed -i "s?# - root?# - root\n        - internet?" $_reponame/src/modules/welcome/welcome.conf_online

    # netinstall moduule
    cp $_reponame/src/modules/netinstall/netinstall.conf $_reponame/src/modules/netinstall/netinstall_nvidia.conf

    # Escape /? \
    sed -i "s?groupsUrl: local?groupsUrl: https:\/\/github.com\/endeavouros-team\/install-scripts\/raw\/master\/netinstall.yaml?" $_reponame/src/modules/netinstall/netinstall.conf

    sed -i "s?groupsUrl: local?groupsUrl: https:\/\/github.com\/endeavouros-team\/install-scripts\/raw\/master\/netinstall_nvidia.yaml?" $_reponame/src/modules/netinstall/netinstall_nvidia.conf


    # branding files
    cp $_reponame/src/branding/endeavouros/img/restore.png                      $_reponame/src/modules/keyboard/images
    cp $_reponame/src/branding/endeavouros/img/{state-error,state-warning}.svg  $_reponame/data/images
    cp $_reponame/src/branding/endeavouros/img/{yes,no}.svgz                    $_reponame/data/images
    cp $_reponame/src/branding/endeavouros/img/geoip/*                          $_reponame/src/modules/locale/images
    
    mkdir -p $_reponame/build/$pkgname

    # remove some calamares modules we don't need
    rm -r $_reponame/src/modules/{dracut,dracutlukscfg,dummycpp,dummyprocess,dummypython,dummypythonqt,initramfs,plymouthcfg,tracking,webview} ||true

    # change some files on the go - distro-specific
    sed -i "s?configuration files\" OFF?configuration files\" ON?g"             $_reponame/CMakeLists.txt
    sed -i "s?username: live?username: liveuser?g"                              $_reponame/src/modules/removeuser/removeuser.conf
    sed -i 's/\"mkinitcpio\", \"-p\", m_kernel/\"mkinitcpio\", \"-P\"/'         $_reponame/src/modules/initcpio/InitcpioJob.cpp
    
    # August 20th 2020
    _user_groups=(adm power sys floppy log rfkill optical scanner)
    for user_groups in "${_user_groups[@]}"
    do
    # will add one by one using -i
    sed -i "s?defaultGroups:?defaultGroups:\n    - $user_groups?" $_reponame/src/modules/users/users.conf
    done

    sed -i "s?doAutologin:.*?doAutologin: false?" $_reponame/src/modules/users/users.conf

    sed -i "s?autologinGroup: autologin?#autologinGroup: autologin?" $_reponame/src/modules/users/users.conf

    sed -i "s?nonempty:?#nonempty:?" $_reponame/src/modules/users/users.conf
    sed -i "s?maxLength:?#maxLength:?" $_reponame/src/modules/users/users.conf
    sed -i "s?libpwquality:?#libpwquality:?" $_reponame/src/modules/users/users.conf

    sed -i "s?minLength:.*?minLength: 1?"  $_reponame/src/modules/users/users.conf
    sed -i "s?- minlen=0?#- minlen=0?" $_reponame/src/modules/users/users.conf 
    sed -i "s?- minclass=0?#- minclass=0?" $_reponame/src/modules/users/users.conf   
 
    echo -e "    GRUB_ENABLE_CRYPTODISK: true" >>$_reponame/src/modules/grubcfg/grubcfg.conf
    
    # recheck if InitcpioJob.cpp, locale, luksbootkeyfile, grub are still needed

    sed -i "s?pacman_flags = \"-S\"?pacman_flags = \"-Sy\"?" $_reponame/src/modules/packages/main.py
    sed -i "s?pacman_flags,?pacman_flags, "--needed",?" $_reponame/src/modules/packages/main.py


}



build() {

    cd $_reponame/build
    # -DBoost_NO_BOOST_CMAKE=ON
    # bug https://github.com/calamares/calamares/issues/1257
    cmake .. -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_LIBDIR=/usr/lib -DBoost_NO_BOOST_CMAKE=ON -DCMAKE_INSTALL_PREFIX=/usr
    export DESTDIR="$srcdir/$_reponame/build/$pkgname" && make -j4 install

}

package() {
    local destdir="/usr"

    # Build proccess can't understand our personal files, so we explicitly copy them here to be packed along calamares files

    cp -r $_reponame/src/branding                                     $_reponame/build/$pkgname/usr/share/calamares/
    cp -r $_reponame/settings.conf_{online,offline}           $_reponame/build/$pkgname/usr/share/calamares/
    cp -r $_reponame/src/modules/welcome/welcome.conf_{on,off}line    $_reponame/build/$pkgname/usr/share/calamares/modules/
    cp -r $_reponame/src/modules/packages/packages.conf_{on,off}line  $_reponame/build/$pkgname/usr/share/calamares/modules/

    # pacstrap as bash script implementation 
    # maybe download base_install.sh everytime from calamares module so it can be updated on the go...
    cp -r $_reponame/src/modules/pacstrap/base_install.sh             $_reponame/build/$pkgname/usr/lib/calamares/modules/pacstrap/base_install.sh
    chmod +x $_reponame/build/$pkgname/usr/lib/calamares/modules/pacstrap/base_install.sh
    
    # Commom install -D doen't work
    cp -r "${srcdir}/${_reponame}/build/$pkgname/"*                   "${pkgdir}${destdir}"

}
