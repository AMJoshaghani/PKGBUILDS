#!/bin/bash

# Made by @fernandomaroto.
# Modified by @manuel.

_run() {
    local yesno="$1"    # --yes = refresh pacman keys, --no = don't refresh pacman keys, "" = ask

    local servers_array=(    # Feel free to suggest mirrors to be added or removed bellow

        # We want to use keyservers only with secured (hkps or https) connections!

        # Status at 2020-Aug-13:

        ############ These don't seem to work:
        #  "keys.openpgp.org"
        ## "pgp.mit.edu"
        #  "keyring.debian.org"
        ## "subset.pool.sks-keyservers.net"
        #  "ipv6.pool.sks-keyservers.net"
        # hkps://keys.mailvelope.com
        ## hkps://hkps.pool.sks-keyservers.net
        # hkps://attester.flowcrypt.com

        ############ These do seem to work:
        hkps://keyserver.ubuntu.com
        hkps://zimmermann.mayfirst.org
        hkps://hkps.pool.sks-keyservers.net        # doesn't work currently; keeping this here anyway
        # https://keyserver.ubuntu.com
        # https://zimmermann.mayfirst.org

        ############ These seem to work but only with hkp:
        # "hkp://ipv4.pool.sks-keyservers.net"
        # "hkp://pool.sks-keyservers.net"
        # "hkp://na.pool.sks-keyservers.net"
        # "hkp://eu.pool.sks-keyservers.net"
        # "hkp://oc.pool.sks-keyservers.net"
        # "hkp://p80.pool.sks-keyservers.net"
        # hkp://hkps.pool.sks-keyservers.net
    )
    local helper=/usr/bin/keyserver-rank-helper
    local server
    local cmdresult
    local timeresult
    local fastest
    local log=$(mktemp)
    
    for server in "${servers_array[@]}"
    do
        echo "Ranking $server ..." >&2
        timeresult="$(/usr/bin/time -f %e $helper $server $log 2>&1 | tail -n 1)"
        echo "$timeresult" >> $log
    done
    printf "\nResults:\n\n" >&2
    cat $log | sort -k 3 | column -t
    fastest="$(cat $log | grep -v -w FAIL | sort -k 3 | head -n 1 | awk '{print $1}')"
    rm -f $log
    printf "\nFastest keyserver is: $fastest\n\n" >&2

    case "$yesno" in
        [yY]* | -[yY]* | --[yY]*) ;;
        [nN]* | -[nN]* | --[nN]*) return ;;
        *)
            read -p "Refresh pacman keys using the fastest keyserver (y/N)? " >&2
            case "$REPLY" in
                "" | [nN]*) return ;;
            esac
            ;;
    esac
    sudo pacman-key --refresh-keys --keyserver "$fastest"
}

_run "$@"
